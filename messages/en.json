{
  "loginPage": {
    "title": "Login",
    "usernameLabel": "Username",
    "passwordLabel": "Password",
    "submitButton": "Sign In",
    "registerLink": "Don't have an account? Register"
  },
  "registerPage": {
    "title": "Register",
    "emailLabel": "Email",
    "passwordLabel": "Password",
    "confirmPasswordLabel": "Confirm Password",
    "submitButton": "Sign Up",
    "loginLink": "Already have an account? Login"
  },
  "HomePage": {
    "title": "Home"
  },
  "common": {
    "connect_wallet": "Connect Wallet",
    "disconnect": "Disconnect",
    "copy_address": "Copy Address",
    "view_on_explorer": "View on Explorer",
    "switch_chain": "Switch Chain",
    "no_network": "No Network",
    "connected": "Connected",
    "connecting": "Connecting..."
  },
  "nav": {
    "timelock_management": "Timelock Management",
    "dashboard": "Dashboard",
    "create_timelock": "Create Timelock",
    "active_timelocks": "Active Timelocks",
    "history": "History",
    "token_management": "Token Management",
    "token_lists": "Token Lists",
    "approvals": "Approvals",
    "transfers": "Transfers",
    "analytics": "Analytics",
    "reports": "Reports",
    "statistics": "Statistics",
    "settings": "Settings",
    "general": "General",
    "security": "Security",
    "notifications": "Notifications",
    "account": "Account",
    "billing": "Billing",
    "logout": "Log out",
    "upgrade_to_pro": "Upgrade to Pro"
  },
  "dashboard": {
    "welcome": "Welcome to Timelock UI",
    "connect_to_start": "Connect your wallet to start managing timelock contracts across multiple chains.",
    "active_timelocks": "Active Timelocks",
    "total_value_locked": "Total Value Locked",
    "chains_supported": "Chains Supported",
    "supported_networks": "Supported Networks:"
  },
  "projects": {
    "multi_sig_wallet": "Multi-Sig Wallet",
    "token_vesting": "Token Vesting",
    "governance": "Governance"
  },
  "teams": {
    "timelock_ui": "Timelock UI",
    "multi_chain": "Multi-Chain",
    "defi_tools": "DeFi Tools"
  },
  "chains": {
    "ethereum": "Ethereum",
    "bsc": "BSC",
    "arbitrum": "Arbitrum",
    "hashkey_chain": "HashKey Chain"
  },
  "ABI-Lib": {
    "title": "ABI Library",
    "abiName": "ABI Name",
    "addressUser": "Address User",
    "addedTime": "Added Time",
    "operations": "Operations",
    "viewABI": "View ABI",
    "delete": "Delete",
    "storedABI": "Stored ABI",
    "storedABIDescription": "This page provides storage for ABIs, for selection when initiating transactions.",
    "new": "New",
    "abiType": "ABI Type",
    "platformShared": "Platform Shared",
    "userImported": "User Imported",
    "fetchAbiListSuccess": "ABI list fetched successfully.",
    "fetchAbiListError": "Failed to fetch ABI list: {message}",
    "addAbiSuccess": "ABI added successfully.",
    "addAbiError": "Failed to add ABI: {message}",
    "validateAbiError": "ABI validation failed: {message}",
    "viewAbiSuccess": "ABI details for {name} fetched successfully.",
    "viewAbiError": "Failed to fetch ABI details: {message}",
    "deleteAbiSuccess": "ABI deleted successfully.",
    "deleteAbiError": "Failed to delete ABI: {message}"
  },
  "Timelocks": {
    "title": "Timelocks",
    "managedTimelocks": "Add Timelock Contract",
    "managedTimelocksDescription": "View and manage your timelock contracts.",
    "newTimelock": "New Timelock",
    "contractAddress": "Contract Address",
    "chain": "Chain",
    "standard": "Standard",
    "status": "Status",
    "remark": "Remark",
    "createdAt": "Created At",
    "operations": "Operations",
    "viewDetail": "View Detail",
    "delete": "Delete",
    "fetchTimelockListSuccess": "Timelock list fetched successfully.",
    "fetchTimelockListError": "Failed to fetch timelock list: {message}",
    "cancel": "Cancel",
    "add": "Add",
    "createTimelockSuccess": "Timelock created successfully.",
    "createTimelockError": "Failed to create timelock: {message}"
  },
  "Transactions": {
    "AddABIForm": {
      "title": "Add New ABI",
      "description": "Enter the details for the new ABI.",
      "nameLabel": "ABI Name",
      "descriptionLabel": "Description",
      "contentLabel": "ABI Content (JSON)",
      "cancelButton": "Cancel",
      "addButton": "Add"
    },
    "title": "Transactions",
    "pending": "Pending",
    "history": "History",
    "pendingTransactions": "Pending Transactions",
    "transactionHistory": "Transaction History",
    "chain": "Chain",
    "tagRemark": "Tag Remark",
    "timelockAddress": "Timelock Address",
    "txHash": "Transaction Hash",
    "type": "Type",
    "operations": "Operations",
    "fetchPendingTxsSuccess": "Pending transactions fetched successfully.",
    "fetchPendingTxsError": "Failed to fetch pending transactions.",
    "fetchHistoryTxsSuccess": "Transaction history fetched successfully.",
    "fetchHistoryTxsError": "Failed to fetch transaction history.",
    "all": "All",
    "queued": "Queued",
    "executed": "Executed",
    "expired": "Expired",
    "canceled": "Canceled",
    "newTransaction": "New Transaction",
    "id": "ID",
    "standard": "Standard",
    "status": "Status",
    "description": "Description",
    "eta": "ETA",
    "createdAt": "Created At",
    "viewDetail": "View Detail",
    "cancel": "Cancel",
    "execute": "Execute",
    "retrySubmit": "Retry Submit",
    "fetchTransactionListSuccess": "Transaction list fetched successfully.",
    "fetchTransactionListError": "Failed to fetch transaction list: {message}",
    "cancelSuccess": "Transaction cancelled successfully.",
    "cancelError": "Failed to cancel transaction.",
    "executeSuccess": "Transaction executed successfully.",
    "executeError": "Failed to execute transaction.",
    "cancelSuccess": "Transaction cancelled successfully.",
    "cancelError": "Failed to cancel transaction.",
    "executeSuccess": "Transaction executed successfully.",
    "executeError": "Failed to execute transaction.",
    "cancelSuccess": "Transaction cancelled successfully.",
    "cancelError": "Failed to cancel transaction.",
    "executeSuccess": "Transaction executed successfully.",
    "executeError": "Failed to execute transaction."
  },
  "Notify": {
    "title": "Email Notifications",
    "fetchEmailListSuccess": "Email list fetched successfully.",
    "fetchEmailListError": "Failed to fetch email list: {message}",
    "confirmDeleteMailbox": "Are you sure you want to delete {email}?",
    "deleteMailboxSuccess": "Mailbox deleted successfully.",
    "deleteMailboxError": "Failed to delete mailbox: {message}"
  }
} 